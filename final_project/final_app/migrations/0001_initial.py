# Generated by Django 5.2 on 2025-05-19 14:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('assessment_type', models.CharField(max_length=50)),
                ('score', models.IntegerField()),
            ],
            options={
                'db_table': 'assessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_percentage', models.IntegerField()),
            ],
            options={
                'db_table': 'attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseDifficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty_level', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'course_difficulty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseInstructor',
            fields=[
                ('course_instructor_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'course_instructor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseSemester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'course_semester',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enroll_id', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enrollment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('instructor_id', models.AutoField(primary_key=True, serialize=False)),
                ('instructor_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'instructor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.AutoField(primary_key=True, serialize=False)),
                ('semester_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'semester',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('stu_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=10)),
                ('dob', models.DateField()),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GPARecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_id', models.IntegerField()),
                ('avg_grade', models.FloatField()),
                ('attendance_percentage', models.FloatField()),
                ('assessment_count', models.IntegerField()),
                ('avg_score', models.FloatField()),
                ('prev_gpa', models.FloatField()),
                ('gpa_drop', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='final_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('model_type', models.CharField(choices=[('classification', 'Classification'), ('regression', 'Regression'), ('clustering', 'Clustering')], max_length=20)),
                ('use_case', models.CharField(max_length=100)),
                ('dataset', models.CharField(max_length=100)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='ml_models/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='final_app.student')),
            ],
        ),
    ]
